name: Deploy Actions
run-name: Upgrade version & Vercel Deploy
on:
  push:
    branches:
      - master
    paths-ignore:
      - 'back/**'
jobs:
  generate-tag:
    runs-on: ubuntu-latest
    if: "contains(github.event.head_commit.message, 'deploy application')"
    defaults:
      run:
        working-directory: ./front
    steps:
      - name: Check out repository code
        uses: actions/checkout@v4
        with:
          ref: ${{ github.head_ref }}
          fetch-depth: 0

      - name: Generate Git Tag
        id: generate_tag
        run: |
          VERSION=$(grep '"version"' package.json | awk -F: '{ print $2 }' | tr -d ',"[:space:]')
          IFS='.' read -r major minor patch <<< "$VERSION"
          NEW_TAG="v${major}.${minor}.${patch}"
          echo "Generated new tag: $NEW_TAG"
          echo "NEW_TAG=$NEW_TAG" >> $GITHUB_ENV

      - name: Push Git Tag
        run: |
          git config user.name "GitHub Actions"
          git config user.email "github-actions@users.noreply.github.com"
          git tag $NEW_TAG
          git push origin $NEW_TAG
  deploy:
    env:
      VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
      VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}
      VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
    runs-on: ubuntu-latest
    environment: production
    needs: generate-tag
    steps:
      - uses: actions/checkout@v4
      - name: Setup nodejs
        uses: actions/setup-node@v3
        with:
          node-version: '20'
      - run: npm ci && npm run build
        working-directory: ./front
      - name: Install Vercel CLI
        run: npm install --global vercel@latest
      - name: Pull Vercel Environment Information
        run: vercel pull --yes --environment=production --token=${VERCEL_TOKEN}
      - name: Build Project Artifacts
        run: vercel build --prod --token=${VERCEL_TOKEN}
      - name: Deploy Project Artifacts to Vercel
        run: vercel deploy --prebuilt --prod --token=${VERCEL_TOKEN}


